<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ilIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADq
        CwAAAk1TRnQBSQFMAwEBAAEoAQABKAEAAUABAAFAAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoBAABAQIA
        AUADAAEBAQABGAYAAcASAL3/A/3/AP8AQgC9/wP9/wD/AEIAV/8D/QP8A/0D/lr/A/3/AP8AQgBU/wP+
        A/MDxwO7A/Va/wP9/wD/AEIAUf8D/gP4A9kDigNVA84D+Vf/A/3/AP8AQgBR/wP8A+YDqQN3AykDagPc
        A/1U/wP9/wD/AEIATv8D/QPvA78DgwN9AzgDGQOXA+wD/lH/A/3/AP8AQgBL/wP+A/QDywOOA4gDfQM5
        Ay4DPgOyA/MD/k7/A/3/AP8AQgBL/wP5A9wDpwOFA4oDfQM5AzEDHANkA8oD+U7/A/3/AP8AQgBI/wP9
        A+sDtQOFA4sDigN9AzkGMgMcA38D5AP9S/8D/f8A/wBCAEX/A/4D8QO/A48DiQOMA4sDfQM5AzIDMwMs
        AzoDmQPvA/5I/wP9/wD/AEIARf8D9APNA5wDhwOLA4wDiwN9AzkDMgMzAzIDJwNUA7MD80j/A/3/AP8A
        QgBC/wP5A9wDpQOIA4oGjAOLA30DOQMyBjMDMAMnA2EDzQP5Rf8D/f8A/wBCAD//A/4D6gOwA40DigmM
        A4sDfQM5AzIJMwMqAzEDegPlA/5C/wP9/wD/AEIAP/8D8APAA5MDiAyMA4sDfQM5AzIGMwYyAykDQAOg
        A+5C/wP9/wD/AEIAPP8D9wPSA5oDigOLDIwDiwN9AzkDMgwzAzADLANQA8ID9z//A/3/AP8AQgA5/wP8
        A+EDqQOLA4kPjAOKA3cDLAMuDzMGLANsA9MD+zz/A/3/AP8AQgA2/wP+A+wDugOLA4kMjAOKA4kDjgOU
        A1UDMgMqAzAMMwMrAycDiwPkA/05/wP9/wD/AEIAM/8D/gP0A8gDkgOKA4sGjAOLA4kDjAOZA7YD5wPX
        A3QDRAMvAywDMAYzAzEDMANBA6wD8AP+Nv8D/f8A/wBCADP/A/cD1AOgA4oDiwOMA4sDigOLA5IDqwPb
        A/wG9QP9A8ADYQM1Bi4DMQMzAzADLANhA8ID9QP+M/8D/f8A/wBCADD/A/wD5gOyA4oMiwOOA6MD0AP0
        A/cD4gavA+YD9gPyA64DVAMqAy4DMQMyAzADJQN8A9cD+jP/A/3/AP8AQgAt/wP+A/EDvQOOBosGigOa
        A8oD7wP3A+wDugNfAykDFgNQA74D8AP2A+ADmgNGAykDLQMxAy8DNgOUA+gD/jD/A/3/AP8AQgAq/wP+
        A/IDyAOZBooDhwOVA8MD6AP4A/UDyANsAy8DNgMtAxIDCgMaA2kDzgP4A/ID0wOGAyUDIAMuAysDUgOs
        A+4w/wP9/wD/AEIAKv8D9wPXA6QDhwOGA48DsgPeA/UD+APPA30DRAM3Ay8DNgMzAxYDDgMNAxUDKwN1
        A9gD+gPpA8ADfQMwAyEDJANnA8cD9y3/A/3/AP8AQgAn/wP+A+UDrQOIA40DrAPRA+0D+gPbA5MDWQM3
        Ay4DNQY4AzMDFgMTAxQDDQMIAxkDSAOQA+ID/QPiA6wDZgMqAyEDcwPWA/4q/wP9/wD/AEIAJ/8D7AO6
        A5IDoQPIA+gD+wPoA6kDaAM/Ay8DMgw4AzMDFgMTBhQDEwMMAwsDJANbA6cD6wP5A9QDmwNMAzwDjQPj
        Kv8D/f8A/wBCACT/A/EDywOsA7kD3wP4A+wDugN/A0sDLAMwAzcPOAMzAxYDEwwUAxEDCgMLAzIDawO4
        A/AD9APEA4IDdwOxA+wn/wP9/wD/AEIAIf8D/APmA84D1QPxA/IDzAORA1MDLgMwAzcVOAMzAxYDExIU
        AxEDBgMEA0ADjAPMA/QD5QO5A7QD2wP6JP8D/f8A/wBCACH/A/oD8wP2A/UD2AOgA2ADMwMtAzcbOAMz
        AxYDExUUAxMDEQMHAxUDVAOhA9wD9QPwA+wD9yT/A/3/AP8AQgAh/wP+A/gD5AO2A28DMQMmAzUDNx44
        AzMDFgMTGxQDEwMPAwYDIANqA7cD5QP5J/8D/f8A/wBCACH/A/wD1QOBAzgDKgM1AzckOAMzAxYDEx4U
        BhMDDAMEAyIDegPVA/wk/wP9/wD/AEIAIf8D9gO3A2YDPwM2AzcDOAY3HjgDMwMWAxMbFAkTBhIDDQM1
        A6MD9ST/A/3/AP8AQgAh/wP+A+IDrwOFA2kDTQM4AzUMNxU4AzMDFgMTFRQJEwMSAxMDGwMiAzoDggPX
        A/4k/wP9/wD/AEIAJP8D+wPUA50DhwODA3MDVwM8AzIDMwM2BjcPOAMzAxYDEw8UCRMDEgMYAyIDKgMu
        AykDWQO+A/on/wP9/wD/AEIAJ/8D7AO+A5QDiQOKA4QDeANjA0QDMQMyAzcPOAMzAxYDEwwUAxMGEgMZ
        AyMDKwMwAzIDJgNCA5sD5yr/A/3/AP8AQgAn/wP7A98DqQaLBowDhgN5A2cDTgM4AzEDNgk4AzMDFgMT
        BhQDEgMQAxQDHQMkAysDMAYyBjADcQPQA/sq/wP9/wD/AEIAKv8D9QPQA5wDhwaLBo0DiQN8A2kDVANA
        AzIDNAM3AzMDFgMTBhEDFwMgAyYDLQMxCTMDMgMhA1ADswPxLf8D/f8A/wBCACr/A/4D7AO5A44DiQOL
        A4wDiwOMA44DjAOAA2wDWANHAzYDLQMTAxEDGQMgAygDMA8zAzIDLwM2A4kD4jD/A/3/AP8AQgAt/wP5
        A9sDpQOIA4sJjAOLA4wGjQOGA3MDWgNEAx0DHwMqAzISMwMyAzEDKgNtA8kD9zD/A/3/AP8AQgAw/wP1
        A8UDkgOJA4sMjAaLA4wDjwOLA3QGMhgzAzIDKwNCA6UD8DP/A/3/AP8AQgAw/wP7A+QDsAaKA4sSjAaL
        A34DOgMyFTMDMgMxAysDggPbA/sz/wP9/wD/AEIAM/8D+APRA5sDigOLFYwDiwN9AzkDMhUzAzEDLgNZ
        A74D9jb/A/3/AP8AQgAz/wP+A/IDwwONA4oDixKMA4sDfQM5AzISMwMyBi4DnwPtA/42/wP9/wD/AEIA
        Nv8D+wPeA6gGixKMA4sDfQM5AzIPMwMyAy4DMAN0A9MD+jn/A/3/AP8AQgA5/wP5A88DkgOKA4sPjAOL
        A30DOQMyDzMDMgMtA0ADuwP3A/45/wP9/wD/AEIAOf8D/gPrA7kDjgOJD4wDiwN9AzkDMg8zAykDMAOJ
        A+QD/jz/A/3/AP8AQgA8/wP7A9oDngOJA4sMjAOLA30DOQMyCTMDMgMwAy4DVQPKA/k//wP9/wD/AEIA
        P/8D8gPGA5MDiAyMA4sDfQM5AzIJMwM0AyYDOwOjA+9C/wP9/wD/AEIAP/8D/QPnA6wDiwOKCYwDiwN9
        AzkDMgkzAy0DMANxA98D/UL/A/3/AP8AQgBC/wP2A9EDnQOHCYwDiwN9AzkDMgYzAzIDKANYA78D9kX/
        A/3/AP8AQgBF/wPwA7sDkAOJBowDiwN9AzkDMgYzAykDOgOUA+5I/wP9/wD/AEIARf8D+wPhA6oDhgOL
        A4wDiwN9AzkDMgMzAzEDIwNtA9cD+0j/A/3/AP8AQgBI/wP0A8kDlgOIA4wDiwN9AzkDMgMzAykDTQOv
        A/RL/wP9/wD/AEIASP8D/gPuA7kDhgaLA30DOQMyAzEDHQOFA+kD/kv/A/3/AP8AQgBL/wP5A9oDpAOH
        A4sDfQM5AzEDJANlA8kD+U7/A/3/AP8AQgBL/wP+A/QDxwOHA4oDfAM4Ay8DKQOqA/ID/k7/A/3/AP8A
        QgBO/wP8A+YDsAOFA3wDNwMbA3wD3wP9Uf8D/f8A/wBCAE7/A/4D9wPWA5IDfAM2Az4DxAP4VP8D/f8A
        /wBCAFH/A/4D8AO/A3gDLgOYA+wD/lT/A/3/AP8AQgBU/wP8A+QDlQNkA90D/Vf/A/3/AP8AQgBU/wP+
        A/QD0QPGA/Za/wP9/wD/AEIAV/8D/QP8A/0D/lr/A/3/AP8AQgC9/wP9/wD/AEIAvf8D/f8A/wBCAAFC
        AU0BPgcAAT4DAAEoBAABAQIAAUADAAEBAQABAQYAAQgWAAP//wD/AP8A/wD/AP8A/wD/AAkACw==
</value>
  </data>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>117, 17</value>
  </metadata>
  <metadata name="fdSelectLocation.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>314, 17</value>
  </metadata>
</root>